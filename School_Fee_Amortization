/*
****************************************************************************************************
 Formula Name   : School Fee Amortization
 Formula Type   : Oracle Payroll
 
 Description    : * HR User should have option to choose start period of amortization.
 
Author          : Amos Langat
Date            : 16-Jun-2024
 Last update on : 
*******************************************************************************************************/

/*****************DATABASE ITEMS ******************************/
default for PAY_EARN_PERIOD_END is '4712/12/31 00:00:00' (date)
default for PAY_EARN_PERIOD_START is '1951/01/01 00:00:00' (date)
default for ALDAR_SCHOOL_FEE_AMORTIZATION_REL_RC_ITD is 0
default for PAY_ASG_TERMINATION_DATE is '4712/12/31 00:00:00' (date)

/***************INPUTS ****************************/
Inputs are Total_Amount,
           Start_Period (DATE),
		   No_of_Installments
		   

l_value      = 0
l_remaining  = 0
l_stop_entry = 0
l_adjustment = 0
l_balance    = 0
l_end_date   = LEAST (PAY_EARN_PERIOD_END, PAY_ASG_TERMINATION_DATE)
formula_name = '[Aldar School Fee Amortization]'


l_log = pay_internal_log_write(formula_name||' : Period start date ' + to_char(PAY_EARN_PERIOD_START,'DD-MM-YYYY'))
l_log = pay_internal_log_write(formula_name||' : Period end date ' + to_char(PAY_EARN_PERIOD_END,'DD-MM-YYYY'))
l_log = pay_internal_log_write(formula_name||' : Total Amount' + to_char(Total_Amount))
l_log = pay_internal_log_write(formula_name||' : Start Period' + to_char(Start_Period,'DD-MM-YYYY'))
l_log = pay_internal_log_write(formula_name||' : No.of Installments' + to_char(No_of_Installments))

/***** To get the element entry ID wise values -- starts *****/
l_element_entry_id      = GET_CONTEXT(ELEMENT_ENTRY_ID, 0)
p_element_entry_id      = TO_CHAR(l_element_entry_id)
dummy = PAY_INTERNAL_LOG_WRITE(formula_name +' Element Entry ID:'+p_element_entry_id)

if l_element_entry_id > 0 then
(
    CHANGE_CONTEXTS(REFERENCE_CODE	= p_element_entry_id)
	(
	
	   l_balance    = ALDAR_SCHOOL_FEE_AMORTIZATION_REL_RC_ITD
	   
        l_log = pay_internal_log_write(formula_name||' : Balance amount ' + to_char(l_balance))

		if Start_Period > PAY_EARN_PERIOD_END then
		(
		l_log = pay_internal_log_write(formula_name||'No pay value as start period greater than process date' )

		l_value = 0

		)
		else
		(
		 l_log = pay_internal_log_write(formula_name||'Entering deduction loop' )

		l_value = round(Total_Amount / No_of_Installments,2)
		l_remaining = Total_Amount - (l_balance + l_value)

		  l_log = pay_internal_log_write(formula_name||' : Pay value inside the loop' + to_char(l_value))
		  l_log = pay_internal_log_write(formula_name||' : Remaining balance' + to_char(l_remaining))
		  
		  if l_remaining < 1 then
		  (
		  
		   
			l_value = l_value + l_remaining
			
		  )
		)

		if L_END_DATE = PAY_ASG_TERMINATION_DATE then
		(
			l_log = pay_internal_log_write(formula_name||'Entering termination loop' )
			l_end_value = Total_Amount - (l_balance)
			return l_end_value,l_adjustment,l_stop_entry,p_element_entry_id
		)

		if (/*l_balance > 0 and */Total_Amount = l_balance + l_value)then
		(
		 
		  l_log = pay_internal_log_write(formula_name||'Entering last installment loop' )

		 l_adjustment = Total_Amount * -1
		 l_stop_entry = 1
		return l_value,l_adjustment,l_stop_entry,p_element_entry_id
		)

		l_log = pay_internal_log_write(formula_name||' : Value ' + to_char(l_value))
    )
)
		return l_value,p_element_entry_id
