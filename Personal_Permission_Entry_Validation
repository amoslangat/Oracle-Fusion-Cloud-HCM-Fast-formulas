/*
****************************************************************************************************
 Formula Name   : Personal Permission Entry Validation
 Formula Type   : Global Absence Entry Validation
 
 Description    : â€¢	Employees are eligible for 2 Hours of leave in Each month.
  Author        : Amos Langat
 Creation date  : 30-06-2023
 Last update on : 
*******************************************************************************************************/ 


DEFAULT_DATA_VALUE FOR anc_per_abs_entrs_absence_entry_id_arr IS 0


DEFAULT FOR anc_abs_entrs_start_date          IS '4712/12/31 00:00:00' (date)
DEFAULT FOR anc_abs_entrs_end_date            IS '4712/12/31 00:00:00' (date)
DEFAULT FOR anc_abs_entrs_absence_status_cd   IS ' '
DEFAULT FOR anc_abs_entrs_approval_status_cd  IS ' '
DEFAULT FOR anc_abs_typ_name                  IS ' '
DEFAULT FOR anc_abs_entrs_duration            IS 0
DEFAULT FOR anc_abs_entrs_start_date_duration IS 0
DEFAULT FOR anc_abs_entrs_end_date_duration   IS 0
DEFAULT FOR anc_abs_entrs_absence_type_id     IS 0


INPUTS ARE iv_end_date       (date), 
           iv_start_date     (date), 
		   iv_totalduration  (number)


l_ab_start    =  TRUNC(iv_start_date)
l_ab_end      =  TRUNC(iv_end_date)
prd_start     =  TO_DATE('1951-01-01','yyyy-MM-dd')
prd_end       =  TO_DATE('4712-12-31','yyyy-MM-dd')
l_date        =  TRUNC(GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00' (date)))
l_ab_id       =  GET_CONTEXT(ABSENCE_TYPE_ID,0)
l_start       =  TRUNC(l_date,'yyyy')
l_end         =  ADD_DAYS(ADD_MONTHS(l_start,12),-1)
l_leave       =  'Volunteering'
valid         =  'Y'
l_duration    =  0
i             =  1
l_next_year_duration = 0
l_absence_entry_id	= TO_CHAR(GET_CONTEXT(ABSENCE_ENTRY_ID,0))

l_year = TO_CHAR(iv_start_date,'YYYY')
l_mon  = to_number(TO_CHAR(iv_start_date,'MM'))

/* jan to apr */
if( 01 <= l_mon and l_mon <=  04) then (
l_q_start = to_date('01-01-'||l_year, 'DD-MM-YYYY')
l_q_end = to_date('30-04-'||l_year, 'DD-MM-YYYY')
)else

if( 05 <= l_mon and l_mon <=  08) then (
l_q_start = to_date('01-05-'||l_year, 'DD-MM-YYYY')
l_q_end = to_date('31-08-'||l_year, 'DD-MM-YYYY')
)else


if( 09 <= l_mon and l_mon <=  12) then (
l_q_start = to_date('01-09-'||l_year, 'DD-MM-YYYY')
l_q_end = to_date('31-12-'||l_year, 'DD-MM-YYYY')
)




CHANGE_CONTEXTS(START_DATE = prd_start, END_DATE = prd_end)
(
    WHILE anc_per_abs_entrs_absence_entry_id_arr.EXISTS(i) LOOP
    (
        CHANGE_CONTEXTS(ABSENCE_ENTRY_ID = anc_per_abs_entrs_absence_entry_id_arr[i])
        (
            CHANGE_CONTEXTS(ABSENCE_TYPE_ID = l_ab_id)
            ( 
	  
	            /*if Absence status is SUBMITTED Then approval status should be either APPROVED/AWAITING
		        and if absence status is WITHDRAWN then approval status should be ORA_AWAIT_AWAIT*/
		 
	            IF ((ANC_ABS_ENTRS_ABSENCE_TYPE_ID = 300000041017790 ) /*PARENTAL PERMISSION*/
				AND ((anc_abs_entrs_absence_status_cd = 'SUBMITTED' AND 
		            (anc_abs_entrs_approval_status_cd = 'APPROVED' OR anc_abs_entrs_approval_status_cd = 'AWAITING')) OR
                    (anc_abs_entrs_absence_status_cd = 'ORA_WITHDRAWN' AND anc_abs_entrs_approval_status_cd = 'ORA_AWAIT_AWAIT')) 
		           AND anc_per_abs_entrs_absence_entry_id_arr[i] <> TO_NUMBER(l_absence_entry_id)) THEN
		        ( 
		            /* To get Absences in the effective date year */
			
		            IF (anc_abs_entrs_start_date <= prd_end and anc_abs_entrs_end_date >= prd_start) THEN
		            (	
						
		                l_duration = l_duration + anc_abs_entrs_duration
						
		            )	
		            
		        )		  
	        )	    
	    )
		
        i=i+1
    )
)



/* Fetches Current Absence Duration in Hours */
l_present_duration = iv_totalduration



l_total = l_duration + l_present_duration
l_bal = 2 - l_duration


IF (l_total > 2) THEN
(
    valid = 'N'
    error_message  = 'ALDAR_VOL_LEAVE' 
    token_name[1]  = 'TOT_BAL'
    token_value[1] = TO_CHAR(2)
	token_name[2]  = 'REM_BAL'
    token_value[2] = TO_CHAR(l_bal)
    
    RETURN VALID,error_message,token_name,token_value
)

RETURN valid
